apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'io.fabric'

def appPropertiesFile = rootProject.file('app/app.properties')
def appProperties = new Properties()
appProperties.load(new FileInputStream(appPropertiesFile))

android {
    compileSdkVersion 27
        buildToolsVersion '27.0.3'
    defaultConfig {
        applicationId 'com.pachatary'
        minSdkVersion 15
        targetSdkVersion 27
        versionCode 2
        versionName '0.1-alpha1'
        testInstrumentationRunner 'android.support.test.runner.AndroidJUnitRunner'
        vectorDrawables.useSupportLibrary = true
    }
    signingConfigs {
        config {
            keyAlias appProperties['RELEASE_KEY_ALIAS']
            keyPassword appProperties['RELEASE_KEY_PASSWORD']
            storeFile file(appProperties['RELEASE_STORE_FILE'])
            storePassword appProperties['RELEASE_STORE_PASSWORD']
        }
    }
    buildTypes {
        all {
            buildConfigField 'int', 'MAX_IMAGE_SIZE', "1600"
        }
        debug {
            applicationIdSuffix '.develop'
            resValue 'string', 'app_name', 'Pachatary develop'
            resValue 'string', 'https_deeplink_host', '"' + appProperties['devHttpsDeeplinkHost'] + '"'
            resValue 'string', 'app_deeplink_host', '"' + appProperties['devAppDeeplinkHost'] + '"'
            buildConfigField 'String', 'API_URL', '"' + appProperties['devApiUrl'] + '"'
            buildConfigField 'String', 'MAPBOX_ACCESS_TOKEN', '"' + appProperties['devMapboxAccessToken'] + '"'
            buildConfigField 'String', 'CLIENT_SECRET_KEY', '"' + appProperties['devClientSecretKey'] + '"'
            multiDexEnabled true
        }
        release {
            resValue 'string', 'app_name', 'Pachatary'
            resValue 'string', 'https_deeplink_host', '"' + appProperties['httpsDeeplinkHost'] + '"'
            resValue 'string', 'app_deeplink_host', '"' + appProperties['appDeeplinkHost'] + '"'
            buildConfigField 'String', 'API_URL', '"' + appProperties['apiUrl'] + '"'
            buildConfigField 'String', 'MAPBOX_ACCESS_TOKEN', '"' + appProperties['mapboxAccessToken'] + '"'
            buildConfigField 'String', 'CLIENT_SECRET_KEY', '"' + appProperties['clientSecretKey'] + '"'
            minifyEnabled true
            multiDexEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.config
        }
    }
    packagingOptions {
        exclude 'META-INF/rxjava.properties'
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation 'com.android.support:support-vector-drawable:27.1.1'
    androidTestImplementation('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'com.android.support:appcompat-v7:27.1.1'
    testImplementation 'junit:junit:4.12'
    implementation 'com.android.support.constraint:constraint-layout:1.1.2'
    implementation 'com.android.support:design:27.1.1'
    implementation 'com.squareup.okhttp3:okhttp:3.8.1'
    implementation 'com.squareup.retrofit2:retrofit:2.3.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.3.0'
    implementation 'com.squareup.retrofit2:adapter-rxjava2:2.3.0'
    testImplementation 'com.squareup.okhttp3:mockwebserver:3.8.1'
    implementation 'io.reactivex.rxjava2:rxjava:2.1.8'
    implementation 'io.reactivex.rxjava2:rxandroid:2.0.1'
    implementation 'com.squareup.picasso:picasso:2.5.2'
    implementation 'com.jakewharton.picasso:picasso2-okhttp3-downloader:1.1.0'
    implementation 'com.google.dagger:dagger:2.14.1'
    kapt 'com.google.dagger:dagger-compiler:2.14.1'
    compileOnly 'javax.annotation:jsr250-api:1.0'
    implementation 'android.arch.lifecycle:runtime:1.1.1'
    implementation 'android.arch.lifecycle:extensions:1.1.1'
    kapt 'android.arch.lifecycle:compiler:1.1.1'
    testImplementation 'org.mockito:mockito-core:2.8.47'
    implementation('com.mapbox.mapboxsdk:mapbox-android-sdk:5.0.2@aar') {
        transitive = true
    }
    implementation 'com.facebook.stetho:stetho:1.5.0'
    implementation 'com.facebook.stetho:stetho-okhttp3:1.5.0'
    implementation 'com.zhihu.android:matisse:0.4.3'
    implementation 'com.github.yalantis:ucrop:2.2.1-native'
    implementation 'net.gotev:uploadservice:3.4'
    implementation 'net.gotev:uploadservice-okhttp:3.4'
    implementation 'com.google.android.gms:play-services-location:15.0.1'

    implementation 'com.crashlytics.sdk.android:crashlytics:2.9.4'
    implementation 'com.android.support:multidex:1.0.3'
}

apply plugin: 'com.google.gms.google-services'
